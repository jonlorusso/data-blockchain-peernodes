{
    "swagger": "2.0",
    "info": {
        "title": "SWATT Internal API",
        "description": "Connect to internal data and systems",
        "version": "1.0.0"
    },
    "host": "localhost:7000",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/{blockchainCode}/txn/{hash}": {
            "get": {
                "summary": "Transaction details",
                "description": "Details of a transaction on the blockchain\n",
                "parameters": [
                    {
                        "name": "blockchainCode",
                        "in": "path",
                        "description": "Code for the Blockchain of the transaction",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "btc",
                            "ltc",
                            "dash",
                            "bth",
                            "eth",
                            "etc"
                        ]
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash key of the transaction",
                        "required": true,
                        "type": "string",
                        "format": "hash"
                    }
                ],
                "tags": [
                    "Blockchain"
                ],
                "responses": {
                    "200": {
                        "description": "A representation of the transaction",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/{blockchainCode}/block/{hash}": {
            "get": {
                "summary": "Block details",
                "description": "Details of a block on the blockchain\n",
                "parameters": [
                    {
                        "name": "blockchainCode",
                        "in": "path",
                        "description": "Code for the Blockchain of the transaction",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "btc",
                            "ltc",
                            "dash",
                            "bth",
                            "eth",
                            "etc"
                        ]
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash key of the block",
                        "required": true,
                        "type": "string",
                        "format": "hash"
                    }
                ],
                "tags": [
                    "Blockchain"
                ],
                "responses": {
                    "200": {
                        "description": "A representation of the block",
                        "schema": {
                            "$ref": "#/definitions/Block"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/{blockchainCode}/blocks/{from}/{to}": {
            "get": {
                "summary": "Aggregate data from a blockchain",
                "description": "Details of a block on the blockchain\n",
                "parameters": [
                    {
                        "name": "blockchainCode",
                        "in": "path",
                        "description": "Code for the Blockchain",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "btc",
                            "ltc",
                            "dash",
                            "bth",
                            "eth",
                            "etc"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "path",
                        "description": "From time, UTC seconds",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "To time, UTC seconds",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Blockchain"
                ],
                "responses": {
                    "200": {
                        "description": "Aggregate data from a blockchain",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Block"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/{blockchainCode}/report/{from}/{to}": {
            "get": {
                "summary": "Aggregate data from a blockchain",
                "description": "Details of a block on the blockchain\n",
                "parameters": [
                    {
                        "name": "blockchainCode",
                        "in": "path",
                        "description": "Code for the Blockchain",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "btc",
                            "ltc",
                            "dash",
                            "bth",
                            "eth",
                            "etc"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "path",
                        "description": "From time, UTC seconds",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "To time, UTC seconds",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Blockchain"
                ],
                "responses": {
                    "200": {
                        "description": "Aggregate data from a blockchain",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dayhistory/{fromCcy}/{toCcy}/{day}": {
            "get": {
                "summary": "Aggregate data from a blockchain",
                "description": "Details of a block on the blockchain\n",
                "parameters": [
                    {
                        "name": "fromCcy",
                        "in": "path",
                        "description": "Ticker of first asset of pair",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromCcy",
                        "in": "path",
                        "description": "Ticker of first asset of pair",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "description": "Date for rate, yyyymmdd",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "MarketData"
                ],
                "responses": {
                    "200": {
                        "description": "Aggregate data from a blockchain",
                        "schema": {
                            "$ref": "#/definitions/RateDay"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dayhistory/{fromCcy}/{toCcy}/{from}/{to}": {
            "get": {
                "summary": "Aggregate data from a blockchain",
                "description": "Details of a block on the blockchain\n",
                "parameters": [
                    {
                        "name": "fromCcy",
                        "in": "path",
                        "description": "Ticker of first asset of pair",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromCcy",
                        "in": "path",
                        "description": "Ticker of first asset of pair",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "path",
                        "description": "From time, UTC seconds",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "To time, UTC seconds",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MarketData"
                ],
                "responses": {
                    "200": {
                        "description": "Aggregate data from a blockchain",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RateDay"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pairs": {
            "get": {
                "summary": "List of currency pairs in system",
                "description": "List of currency pairs for which there is market data and time range\n",
                "tags": [
                    "MarketData"
                ],
                "responses": {
                    "200": {
                        "description": "Set of currency pairs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pair"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Block": {
            "type": "object",
            "properties": {
                "blockchainName": {
                    "type": "string",
                    "description": "Name of the blockchain"
                },
                "blockHash": {
                    "type": "string",
                    "description": "Blockchain hash of the block"
                },
                "avgFee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Average fee paid per transaction in native coin"
                },
                "avgFeeRate": {
                    "type": "number",
                    "format": "Double",
                    "description": "Average fee per transaction size in native coin per kilobyte"
                },
                "largestFee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Largest fee paid in native coin"
                },
                "smallestFee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Smallest fee paid in native coin"
                },
                "largestTxAmount": {
                    "type": "number",
                    "format": "Double",
                    "description": "Largest transaction on the block in native coin"
                },
                "largestTxHash": {
                    "type": "string",
                    "description": "Blockchain hash of the Largest transaction on the block"
                },
                "transactionCount": {
                    "type": "number",
                    "format": "int32",
                    "description": "Number of transactions in the block"
                },
                "bits": {
                    "type": "string",
                    "description": "Hexadecimal target for the block"
                },
                "size": {
                    "type": "number",
                    "format": "int64",
                    "description": "Total size of the block in bytes"
                },
                "height": {
                    "type": "number",
                    "format": "int32",
                    "description": "Block ID in the chain"
                },
                "difficulty": {
                    "type": "number",
                    "format": "Double",
                    "description": "A measure of how difficult it is to find a hash below a given target."
                },
                "nonce": {
                    "type": "string",
                    "description": "Abitrary unique nonce for the block"
                },
                "reward": {
                    "type": "number",
                    "format": "Double",
                    "description": "Miners reward paid for block."
                },
                "merkleRoot": {
                    "type": "string",
                    "description": "Merkle root is not used to verify the integrity of transactions in block"
                },
                "prevHash": {
                    "type": "string",
                    "description": "Blockchain hash of previous block in the chain"
                },
                "timestamp": {
                    "type": "number",
                    "format": "int64",
                    "description": "Time the block was written to the blockchain in UTC seconds"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "description": "Blockchain hash of the transaction"
                },
                "fee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Fee paid in native coin"
                },
                "coinbase": {
                    "type": "boolean",
                    "description": "Whether transaction was a coin base for the block"
                },
                "size": {
                    "type": "number",
                    "format": "int32",
                    "description": "Size of the transaction on the blockchain in bytes"
                },
                "amount": {
                    "type": "number",
                    "format": "Double",
                    "description": "Transaction amount net of fees paid"
                },
                "feeRate": {
                    "type": "number",
                    "format": "Double",
                    "description": "Fee as a function of transaction size in coin per kilobyte"
                },
                "blockhash": {
                    "type": "string",
                    "description": "Blockchain hash of the written block if any"
                },
                "timestamp": {
                    "type": "number",
                    "format": "int64",
                    "description": "Time the transaction was written to the blockchain in UTC seconds"
                }
            }
        },
        "Report": {
            "type": "object",
            "properties": {
                "blockchainName": {
                    "type": "string",
                    "description": "Name of the blockchain"
                },
                "blockCount": {
                    "type": "number",
                    "format": "int32",
                    "description": "Number of blocks in the range"
                },
                "transactionCount": {
                    "type": "number",
                    "format": "int32",
                    "description": "Number of transactions in the range"
                },
                "avgTransactionCount": {
                    "type": "number",
                    "format": "int32",
                    "description": "Number of transactions per block in the range"
                },
                "avgFee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Average fee paid per transaction in native coin"
                },
                "avgFeeRate": {
                    "type": "number",
                    "format": "Double",
                    "description": "Average fee per transaction size in native coin per kilobyte"
                },
                "largestFee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Largest fee paid in native coin"
                },
                "smallestFee": {
                    "type": "number",
                    "format": "Double",
                    "description": "Smallest fee paid in native coin"
                },
                "fromTimestamp": {
                    "type": "number",
                    "format": "int64",
                    "description": "Timestamp of the oldest block in the range"
                },
                "toTimestamp": {
                    "type": "number",
                    "format": "int64",
                    "description": "Timestamp of the most recent block in the range"
                }
            }
        },
        "Pair": {
            "type": "object",
            "properties": {
                "fromCcy": {
                    "type": "string",
                    "description": "Ticker of first asset in pair"
                },
                "toCcy": {
                    "type": "string",
                    "description": "Ticker of second asset in pair"
                },
                "fromDate": {
                    "type": "number",
                    "format": "int64",
                    "description": "Date of the oldest rate for the pair"
                },
                "toDate": {
                    "type": "number",
                    "format": "int64",
                    "description": "Date of the most recent rate for the pair"
                }
            }
        },
        "RateDay": {
            "type": "object",
            "properties": {
                "datasource": {
                    "type": "string",
                    "description": "Name of source of data"
                },
                "fromCcy": {
                    "type": "string",
                    "description": "Ticker of first asset in pair"
                },
                "toCcy": {
                    "type": "string",
                    "description": "Ticker of second asset in pair"
                },
                "day": {
                    "type": "number",
                    "format": "int64",
                    "description": "Date of the rate in epoch seconds UTC"
                },
                "open": {
                    "type": "number",
                    "format": "Double",
                    "description": "Lowest observed rate for the day"
                },
                "close": {
                    "type": "number",
                    "format": "Double",
                    "description": "Last observed rate for the day"
                },
                "high": {
                    "type": "number",
                    "format": "Double",
                    "description": "Highest observed rate for the day"
                },
                "volume": {
                    "type": "number",
                    "format": "int64",
                    "description": "Daily traded volume as reported to datasource"
                },
                "marketCap": {
                    "type": "number",
                    "format": "int64",
                    "description": "Estimated market capitalization of the pair"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}